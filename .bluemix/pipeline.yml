---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: master
    service: ${BASE_REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build
    type: builder
    build_type: shell
    script: |
      #!/bin/bash
      echo "Building"
      export JAVA_HOME=$JAVA8_HOME
      chmod +x gradlew
      ./gradlew build --console=plain
- name: DEPLOY
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  jobs:
  - name: Build Container
    type: builder
    extension_id: ibm.devops.services.pipeline.container.builder
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
    IMAGE_NAME: ${CF_APP_NAME}
    USE_CACHED_LAYERS: 'true'
    COMMAND: |-
      #!/bin/bash
      ls -lRa
      echo -e "${label_color}Starting build script${no_color}"

      DOCKERFILE_FOLDER="myWlpcfg"

      if [ -f ${DOCKERFILE_FOLDER}/Dockerfile ]; then
          echo -e "${label_color}Building ${FULL_REPOSITORY_NAME} ${no_color}"
          ${EXT_DIR}/utilities/sendMessage.sh -l info -m "New container build requested for ${FULL_REPOSITORY_NAME}"
          # build image
          BUILD_COMMAND=""
          CACHED_LAYERS_ARG=""
          if [ "${USE_CACHED_LAYERS}" == "true" ]; then
              CACHED_LAYERS_ARG="--pull"
          else
              CACHED_LAYERS_ARG="--no-cache"
          fi

          BUILD_COMMAND="build ${CACHED_LAYERS_ARG} --tag ${FULL_REPOSITORY_NAME} ${WORKSPACE}/${DOCKERFILE_FOLDER}"
          ice_retry ${BUILD_COMMAND}
          RESULT=$?

          if [ $RESULT -ne 0 ]; then
              echo -e "${red}Error building image ${no_color}" | tee -a "$ERROR_LOG_FILE"
              echo "Build command: ice ${BUILD_COMMAND}"
              ice info
              ice images
              ${EXT_DIR}/print_help.sh
              ${EXT_DIR}/utilities/sendMessage.sh -l bad -m "Container build of ${FULL_REPOSITORY_NAME} failed"
              exit 1
          else
              ${EXT_DIR}/utilities/sendMessage.sh -l good -m "Container build of ${FULL_REPOSITORY_NAME} was successful"
              echo -e "${green}Container build of ${FULL_REPOSITORY_NAME} was successful ${no_color}"
          fi
      else
          echo -e "${red}Dockerfile not found in project${no_color}"
          exit 1
      fi

      echo "IMAGE_NAME=${FULL_REPOSITORY_NAME}" >> $ARCHIVE_DIR/build.properties
- name: ICS Deploy
  inputs:
  - type: job
    stage: DEPLOY
    job: Build Container
    dir_name: null
  triggers:
  - type: stage
  jobs:
  - name: Deploy Container
    type: deployer
    extension_id: ibm.devops.services.pipeline.docker.deploy.ice
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
    PORT: '9080'
    DEPLOY_TYPE: simple
    CONTAINER_NAME: ${CF_APP_NAME}
    COMMAND: |-
      #!/bin/bash
      echo "Deploy launched"
